{
  "env": {
    "node": true,
    "es6": true,
    "es2017": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "airbnb-typescript/base"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "tsconfigRootDir": "."
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    "no-await-in-loop": "off",
    "object-curly-newline": "off",
    "import/prefer-default-export": "off",
    "no-restricted-syntax": "off",
    "no-underscore-dangle": "off",
    "no-continue": "off",
    "no-useless-constructor": "off",
    "@typescript-eslint/space-before-function-paren": "off",
    "space-before-function-paren": ["error", {
      "anonymous": "always",
      "named": "always",
      "asyncArrow": "always"
    }],
    // Doesn't support cases with parameter decorators.
    "@typescript-eslint/no-useless-constructor": "off",

    // Doesn't support DomainException which doesn't extend Error.
    "@typescript-eslint/no-throw-literal": "off",

    // Just not convenient.
    "@typescript-eslint/restrict-template-expressions": "off",

    // When i explicitly use any, a want to have all freedom it provides.
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-call": "off",

    // Unnesessary parenthesis create extra noise.
    "arrow-parens": ["error", "as-needed"],

    // Unfortunately when using typeorm we can't avoid cycles.
    "import/no-cycle": "off",

    // Made to enforce high cohesion, but in fact doesn't do anything useful
    "class-methods-use-this": "off",

    // We don't like trailing commas
    "comma-dangle": ["error", "never"],
    "@typescript-eslint/comma-dangle": "off",

    // We don't like extra vebosity.
    "no-plusplus": "off",
    "max-len": ["error", 100],

    // This rule sometimes conflicts with others
    "implicit-arrow-linebreak": "off"
  }
}